[{"C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\index.js":"1","C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\util\\util.js":"2","C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\components\\InfoBox\\InfoBox.js":"3","C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\components\\LineGraph\\LineGraph.js":"4","C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\components\\Table\\Table.js":"5","C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\App.js":"6","C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\serviceWorker.js":"7"},{"size":493,"mtime":1609157852099,"results":"8","hashOfConfig":"9"},{"size":297,"mtime":1609175230212,"results":"10","hashOfConfig":"9"},{"size":617,"mtime":1609176617920,"results":"11","hashOfConfig":"9"},{"size":2298,"mtime":1609161501846,"results":"12","hashOfConfig":"9"},{"size":468,"mtime":1609176369717,"results":"13","hashOfConfig":"9"},{"size":3372,"mtime":1609176529486,"results":"14","hashOfConfig":"9"},{"size":5328,"mtime":1609157852100,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jt700p",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\index.js",[],"C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\util\\util.js",[],"C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\components\\InfoBox\\InfoBox.js",[],"C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\components\\LineGraph\\LineGraph.js",[],"C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\components\\Table\\Table.js",[],"C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\App.js",["31","32"],"import React, { useEffect, useState } from 'react';\r\nimport {MenuItem,FormControl,Select,Card,CardContent,} from \"@material-ui/core\";\r\nimport InfoBox from './components/InfoBox/InfoBox';\r\nimport LineGraph from './components/LineGraph/LineGraph';\r\nimport Table from './components/Table/Table';\r\nimport { sortData, prettyPrintStat } from './util/util';\r\nimport numeral from \"numeral\";\r\nimport './App.css';\r\n\r\nconst apiURL = \"http://localhost:5000/api\";\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState('Global');\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  \r\n  useEffect(() => {\r\n    fetch(`${apiURL}/countries/Global/today`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setCountryInfo(data);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch (`${apiURL}/countries`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const countries = data.map((country) => ({\r\n            name: country.Country,\r\n            value: country.Country\r\n          }));\r\n\r\n          const sortedData = sortData(data);\r\n          setTableData(sortedData);\r\n          setCountries(countries);\r\n      });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (event) => {\r\n    const countryCode = event.target.value;\r\n    setCountry(countryCode);\r\n\r\n    const url =countryCode === 'Global' \r\n    ? `${apiURL}/countries/Global/today` \r\n    : `${apiURL}/countries/${countryCode}/today`;\r\n\r\n    await fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setCountryInfo(data);\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__left\">\r\n        <div className=\"app__header\">\r\n        <h1>COVID-19 Tracker</h1>\r\n        <FormControl className=\"app__dropdown\">\r\n          <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\r\n            <MenuItem value=\"Global\">Global</MenuItem>\r\n            {countries.map(country => (\r\n                <MenuItem value={country.value}>{country.name}</MenuItem>\r\n            ))}         \r\n          </Select>\r\n        </FormControl>\r\n        </div>\r\n        \r\n        <div className=\"app__stats\">\r\n              <InfoBox \r\n              onClick={(e) => setCasesType(\"cases\")} \r\n              title=\"Cases\" \r\n              cases={prettyPrintStat(countryInfo.New_cases)} \r\n              total={prettyPrintStat(countryInfo.Cumulative_cases)}/>\r\n              {/*<InfoBox onClick={(e) => setCasesType(\"cases\")} title=\"Recovered\" cases={2345} total={3000}/>*/}\r\n              <InfoBox \r\n              onClick={(e) => setCasesType(\"deaths\")} \r\n              title=\"Deaths\" \r\n              cases={prettyPrintStat(countryInfo.New_deaths)} \r\n              total={prettyPrintStat(countryInfo.Cumulative_deaths)}/>\r\n        </div>\r\n        <Card>\r\n          <h3>Worldwide new cases</h3>\r\n          <LineGraph casesType={casesType} />\r\n        </Card>    \r\n        \r\n        {/* Graph */}\r\n      </div>\r\n      <Card className=\"app_right\">\r\n              <h3>Live Cases by Country</h3>\r\n              <Table countries={tableData} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","C:\\Users\\Dachi\\Desktop\\bachelor\\covidtracker\\client\\src\\serviceWorker.js",[],{"ruleId":"33","severity":1,"message":"34","line":2,"column":42,"nodeType":"35","messageId":"36","endLine":2,"endColumn":53},{"ruleId":"33","severity":1,"message":"37","line":7,"column":8,"nodeType":"35","messageId":"36","endLine":7,"endColumn":15},"no-unused-vars","'CardContent' is defined but never used.","Identifier","unusedVar","'numeral' is defined but never used."]